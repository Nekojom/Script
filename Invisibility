-- Roblox Invisibility Script (Server + Client)
-- ไฟล์นี้มี 3 ส่วน: 1) สร้าง RemoteEvent (ให้วางใน ReplicatedStorage)
-- 2) Server Script (ให้วางใน ServerScriptService) เพื่อรับคำขอจาก client
-- 3) LocalScript (ให้วางใน StarterPlayerScripts) เพื่อให้ผู้เล่นสั่งหายตัว (toggle)
-- ใช้งานได้ทั้ง R6 และ R15 เป็นหลัก (ปรับได้เพิ่มเติมตามต้องการ)

-- ====== 1) สร้าง RemoteEvent ======
-- วางโค้ดนี้เป็น Script ครั้งแรกเพื่อสร้าง RemoteEvent ใน ReplicatedStorage
-- (หรือจะสร้างด้วยตัวเองผ่าน Explorer ก็ได้)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local eventName = "ToggleInvisibilityEvent"
if not ReplicatedStorage:FindFirstChild(eventName) then
    local re = Instance.new("RemoteEvent")
    re.Name = eventName
    re.Parent = ReplicatedStorage
end

-- ====== 2) Server Script (ServerScriptService) ======
-- Server ทำหน้าที่รับคำสั่งจาก client และตรวจสิทธิ์/ทำสำเนา effect ถ้าต้องการ
-- วางส่วนนี้ใน ServerScriptService
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local event = ReplicatedStorage:WaitForChild("ToggleInvisibilityEvent")

-- ฟังก์ชันเปลี่ยนสถานะหายตัว (server-side changes)
local function setCharacterInvisible(character, invisible)
    if not character then return end
    -- เปลี่ยน transparency ของส่วนที่เป็น BasePart
    for _, part in ipairs(character:GetDescendants()) do
        if part:IsA("BasePart") then
            -- บันทึกค่าดั้งเดิมไว้ที่ Attribute ชั่วคราว (เพื่อให้กลับคืนได้)
            if not part:GetAttribute("_origTransparency") then
                part:SetAttribute("_origTransparency", part.Transparency)
                part:SetAttribute("_origCanCollide", part.CanCollide)
            end
            if invisible then
                part.Transparency = 1
                part.CanCollide = false
            else
                local origT = part:GetAttribute("_origTransparency")
                local origC = part:GetAttribute("_origCanCollide")
                if origT then part.Transparency = origT end
                if origC ~= nil then part.CanCollide = origC end
                part:SetAttribute("_origTransparency", nil)
                part:SetAttribute("_origCanCollide", nil)
            end
        elseif part:IsA("Decal") or part:IsA("Texture") then
            -- ซ่อน/คืนค่าภาพถ้าต้องการ
            if not part:GetAttribute("_origEnabled") then
                part:SetAttribute("_origEnabled", part.Enabled)
            end
            part.Enabled = not invisible and part:GetAttribute("_origEnabled")
            if not invisible then
                part:SetAttribute("_origEnabled", nil)
            end
        elseif part:IsA("BaseScript") then
            -- ไม่เปลี่ยน
        end
    end
    -- ซ่อน Accessories / Handles
    for _, acc in ipairs(character:GetChildren()) do
        if acc:IsA("Accessory") then
            local handle = acc:FindFirstChild("Handle")
            if handle then
                if not handle:GetAttribute("_origTransparency") then
                    handle:SetAttribute("_origTransparency", handle.Transparency)
                    handle:SetAttribute("_origCanCollide", handle.CanCollide)
                end
                if invisible then
                    handle.Transparency = 1
                    handle.CanCollide = false
                else
                    local origT = handle:GetAttribute("_origTransparency")
                    local origC = handle:GetAttribute("_origCanCollide")
                    if origT then handle.Transparency = origT end
                    if origC ~= nil then handle.CanCollide = origC end
                    handle:SetAttribute("_origTransparency", nil)
                    handle:SetAttribute("_origCanCollide", nil)
                end
            end
        end
    end
end

-- ถ้าอยากจำกัดสิทธิ์ (เช่น ให้เฉพาะผู้ดูแล/ผู้เล่นบางคน) ใส่เงื่อนไขใน callback นี้
event.OnServerEvent:Connect(function(player, shouldBeInvisible)
    -- ตัวอย่าง: ห้ามผู้เล่นปกติหายตัวถ้าเป็นเกมสาธารณะ
    -- ถ้าต้องการเปิดให้ทุกคนใช้ ให้เอาเงื่อนไขออก
    -- ตัวอย่างเช็ค permission: (แก้ตามต้องการ)
    local allowed = true -- เปลี่ยนเป็น check ที่เหมาะสมถ้าต้องการ

    if not allowed then return end

    local char = player.Character or player.CharacterAdded:Wait()
    setCharacterInvisible(char, shouldBeInvisible)
end)


-- ====== 3) LocalScript (StarterPlayerScripts) ======
-- LocalScript นี้จะส่งคำสั่งไปยัง Server RemoteEvent เมื่อผู้เล่นกดปุ่ม
-- วางไฟล์นี้ลงใน StarterPlayer > StarterPlayerScripts (เป็น LocalScript)
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local plr = Players.LocalPlayer
local event = ReplicatedStorage:WaitForChild("ToggleInvisibilityEvent")

local invisible = false

-- ฟังก์ชันที่ใช้ toggle และปรับ client-side visuals (เช่น GUI, tools)
local function toggleInvisible()
    invisible = not invisible
    -- ส่งคำขอไป Server ให้ทำการเปลี่ยน (server เป็นตัวจริงในการเปลี่ยน)
    event:FireServer(invisible)

    -- client-side: ซ่อนคลัง/เครื่องมือ (Tools) เพื่อไม่ให้ยังถูกแสดงในมือ
    if plr.Character then
        for _, child in ipairs(plr.Character:GetChildren()) do
            if child:IsA("Tool") then
                if invisible then
                    child.Parent = plr.Backpack -- เก็บเข้ากระเป๋า
                else
                    -- ไม่พากลับอัตโนมัติเพื่อป้องกันปัญหา; ผู้เล่นสามารถ equip เอง
                end
            end
        end
    end
end

-- ตัวอย่าง: กดปุ่ม H เพื่อ toggle
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.H then
            toggleInvisible()
        end
    end
end)

-- เพิ่มคำสั่ง chat command (เช่น /invis) เป็นตัวเลือกสำรอง
plr.Chatted:Connect(function(msg)
    local m = msg:lower()
    if m == "/invis" or m == "!invis" then
        toggleInvisible()
    end
end)

-- หมายเหตุสำคัญ:
-- 1) สคริปต์นี้ทำให้ส่วนต่าง ๆ ของตัวละครโปร่งใสและ CanCollide = false
--    แต่มันไม่ได้เปลี่ยนความสามารถในการตรวจจับบน server เช่น raycast หรือ
--    AI ที่ตรวจโดยใช้ HumanoidRootPart อยู่แล้ว (หาก NPC ตรวจด้วย raycast หรือ
--    ระบบอื่น ๆ อาจยังเห็นผู้เล่นได้)
-- 2) หากต้องการ "ไม่ถูกตรวจจับ" จริง ๆ อาจต้องปรับระบบตรวจจับของเกม
--    (เช่นให้ AI เช็คการมองเห็นและหักล้างผู้เล่นที่มี flag invisible)
-- 3) ระวังการใช้ในเกมที่อาจให้ข้อได้เปรียบโดยไม่ยุติธรรมหรือละเมิดกฎ
--    ของเซิร์ฟเวอร์/แพลตฟอร์ม

-- จบไฟล์
